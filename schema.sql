DROP DATABASE IF EXISTS clothing;
CREATE DATABASE clothing;
\c clothing;


CREATE TABLE users (
  userId serial PRIMARY KEY,
  username VARCHAR ( 30 ),
  email VARCHAR ( 40 )
);

COPY users (username, email)
FROM '/Users/mariaward/Documents/style-carousel/generator/users.csv'
DELIMITER ','
CSV HEADER;

CREATE TABLE stock (
  productId serial PRIMARY KEY,
  name VARCHAR ( 40 )
);

COPY stock (name)
FROM '/Users/mariaward/Documents/style-carousel/generator/stock.csv'
DELIMITER ','
CSV HEADER;

CREATE TABLE quantity (
  quantityId serial PRIMARY KEY,
  xs INT,
  s INT,
  m INT,
  l INT,
  xl INT,
  xxl INT
);

COPY quantity (xs,s,m,l,xl,xxl)
FROM '/Users/mariaward/Documents/style-carousel/generator/quantity.csv'
DELIMITER ','
CSV HEADER;

CREATE TABLE styles (
  styleId serial PRIMARY KEY,
  imageUrl VARCHAR ( 80 ),
  styleName VARCHAR ( 40 ),
  price DECIMAL,
  quantityId INT,
  FOREIGN KEY (quantityId)
    REFERENCES quantity (quantityId)
);

COPY styles (imageUrl,styleName,price,quantityId)
FROM '/Users/mariaward/Documents/style-carousel/generator/styles.csv'
DELIMITER ','
CSV HEADER;

CREATE TABLE products (
  itemId INT GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  productId INT,
  styleId INT,
  FOREIGN KEY (productId)
    REFERENCES  stock (productId),
  FOREIGN KEY (styleId)
    REFERENCES styles (styleId)
);

COPY products (productId,styleId)
FROM '/Users/mariaward/Documents/style-carousel/generator/products.csv'
DELIMITER ','
CSV HEADER;

CREATE TABLE bag (
  bagId serial PRIMARY KEY,
  userId INT,
  itemId INT,
  FOREIGN KEY (userId)
    REFERENCES  users (userId),
  FOREIGN KEY (itemId)
    REFERENCES  products (itemId),
  size VARCHAR (5),
  quantity INTEGER,
  calculatedPrice DECIMAL
);

COPY bag (userId,itemId,size,quantity,calculatedPrice)
FROM '/Users/mariaward/Documents/style-carousel/generator/bag.csv'
DELIMITER ','
CSV HEADER;

--primary key indices
DROP INDEX IF EXISTS ind_users_userid;
DROP INDEX IF EXISTS ind_stock_productid;
DROP INDEX IF EXISTS ind_products_itemid;
DROP INDEX IF EXISTS ind_quantity_quantityid;
DROP INDEX IF EXISTS ind_bag_bagid;
DROP INDEX IF EXISTS ind_styles_styleid;
DROP INDEX IF EXISTS ind_styles_quantityid;
DROP INDEX IF EXISTS ind_products_product;

CREATE INDEX ind_users_userid ON users(userid);
CREATE INDEX ind_stock_productid ON stock(productid);
CREATE INDEX ind_products_itemid ON products(productid);
CREATE INDEX ind_quantity_quantityid ON quantity(quantityid);
CREATE INDEX ind_bag_bagid ON bag(bagid);
CREATE INDEX ind_styles_styleid ON styles(styleid);

--the where items and on joins, foreign keys
CREATE INDEX ind_styles_quantityid ON styles(quantityid);
CREATE INDEX ind_products_product ON products(productid, styleid);
